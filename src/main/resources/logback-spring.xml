<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true">
    <!--
    DB에 로그를 저장하는 등, 로그 설정이 복잡해질 경우 application-*.yml 의 logging.** 속성이 아니라 이 파일로 상세 설정을 해야 함.
    즉, logging.** 속성은 이 파일의 속성이 단순화된 것임.
    또한, 이 파일의 이름을 "logback-spring.xml"로 설정해야 spring 이 설정값으로 읽을 수 있음.
    기타 사항은 공식 문서(https://logback.qos.ch/manual/) 참조
    -->

    <!--  기본 설정 include  -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!--Environment 내의 프로퍼티들을 개별적으로 설정할 수도 있다.-->
    <springProperty scope="context" name="LOG_LEVEL" source="logging.level.root"/>

    <!-- log file path -->
    <springProperty scope="context" name="LOG_PATH" source="logging.file.path"/>

    <!-- log file name -->
    <springProperty scope="context" name="LOG_FILE_NAME" source="logging.file.name"/>

    <!-- pattern -->
    <springProperty scope="context" name="CONSOLE_LOG_PATTERN" source="logging.pattern.console"/>
    <springProperty scope="context" name="FILE_LOG_PATTERN" source="logging.pattern.file"/>

    <springProperty name="url" source="spring.datasource.url"/>
    <springProperty name="user" source="spring.datasource.username"/>
    <springProperty name="password" source="spring.datasource.password"/>

    <springProfile name="slack-logging">
        <!-- Slack Appender -->
        <appender name="SLACK" class="com.hungrybrothers.alarmforsubscription.log.SlackAppender">
        </appender>
    </springProfile>

    <springProfile name="console-logging">
        <!-- Console Appender -->
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${CONSOLE_LOG_PATTERN}</pattern>
                <charset>utf8</charset>
            </encoder>
        </appender>
    </springProfile>

    <springProfile name="file-logging">
        <!-- 에러의 경우 파일에 로그 처리 -->
        <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>
            <encoder>
                <pattern>${FILE_LOG_PATTERN}</pattern>
                <charset>utf8</charset>
            </encoder>
            <!-- Rolling 정책 -->
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
                <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.zip</fileNamePattern>
                <!-- 파일당 최고 용량 kb, mb, gb -->
                <maxFileSize>10MB</maxFileSize>
                <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거-->
                <maxHistory>30</maxHistory>
            </rollingPolicy>
        </appender>
    </springProfile>

    <springProfile name="redis-logging">
        <appender name="REDIS" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${CONSOLE_LOG_PATTERN}</pattern>
                <charset>utf8</charset>
            </encoder>
        </appender>
    </springProfile>

    <!-- root레벨 설정 -->
    <root level="${LOG_LEVEL}">
        <springProfile name="slack-logging">
            <appender-ref ref="SLACK"/>
        </springProfile>

        <springProfile name="console-logging">
            <appender-ref ref="CONSOLE"/>
        </springProfile>

        <springProfile name="file-logging">
            <appender-ref ref="FILE"/>
        </springProfile>

        <springProfile name="redis-logging">
            <appender-ref ref="REDIS"/>
        </springProfile>
    </root>
</configuration>
